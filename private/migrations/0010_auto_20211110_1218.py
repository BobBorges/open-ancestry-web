# Generated by Django 3.2.9 on 2021-11-10 12:18

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('private', '0009_auto_20211110_1200'),
    ]

    operations = [
        migrations.AddField(
            model_name='relationship',
            name='end_date',
            field=models.CharField(blank=True, help_text="YYYY-MM-DD. Approximate dates can also be given in YYYY-MM or YYYY format. In this case, tick the below 'Start | End date approximate' box. Biological relationships start on the birth day of the child – no end date is necessary. Date information for non-biological relationships should be entered based on a marriage / adoption event. And end date should be entered for 'spouse of' relatonships in the case of divorce, or for 'guardian/ward' relationships if/when there is a clear end to that relationship.", max_length=255),
        ),
        migrations.AddField(
            model_name='relationship',
            name='end_date_approximate',
            field=models.BooleanField(default=False),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='relationship',
            name='start_date',
            field=models.CharField(blank=True, help_text="YYYY-MM-DD. Approximate dates can also be given in YYYY-MM or YYYY format. In this case, tick the below 'Start | End date approximate' box. Biological relationships start on the birth day of the child – no end date is necessary. Date information for non-biological relationships should be entered based on a marriage / adoption event. And end date should be entered for 'spouse of' relatonships in the case of divorce, or for 'guardian/ward' relationships if/when there is a clear end to that relationship.", max_length=255),
        ),
        migrations.AddField(
            model_name='relationship',
            name='start_date_approximate',
            field=models.BooleanField(default=False),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='relationship',
            name='source',
            field=models.ManyToManyField(blank=True, to='private.Source'),
        ),
    ]
